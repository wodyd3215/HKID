<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">
  <resultMap id="boardResultSet" type="Board">
  	<result column="BOARD_NO" property="boardNo"/>
  	<result column="BOARD_TITLE" property="boardTitle"/>
  	<result column="BOARD_DATE" property="boardDate"/>
  	<result column="BOARD_CONTENT" property="content"/>
  	<result column="BOARD_VIEW_COUNT" property="boardViewCount"/>
  	<result column="BOARD_STATUS" property="boardStatus"/>
  	<result column="COMMUNITY_NO" property="communityNo"/>
  	<result column="MEMBER_NO" property="memberNo"/>
  	<result column="NICKNAME" property="nickName"/>
  	<result column="ORIGIN_NAME" property="originName"/>
  	<result column="CHANGE_NAME" property="changeName"/>
  	<result column="FILE_PATH" property="file_path"/>
  </resultMap>
  
  <resultMap id="commmunityResultSet" type="Community">
  	<result column="BOARD_NO" property="boardNo"/>
  	<result column="BOARD_TITLE" property="boardTitle"/>
  	<result column="BOARD_DATE" property="boardDate"/>
  	<result column="BOARD_VIEW_COUNT" property="boardViewCount"/>
  	<result column="COMMUNITY_NAME" property="communityName"/>
  	<result column="NICKNAME" property="userName"/>
  </resultMap>
  
  <resultMap id="GoodResultSet" type="Good">
  	<result column="BOARD_NO" property="boardNo"/>
  	<result column="MEMBER_NO" property="memberNo"/>
  	<result column="GOOD_STATUS" property="GoodStatus"/>
  </resultMap>
  
  <resultMap id="ReplyResultSet" type="CommentReply">
  	<result column="BOARD_NO" property="boardNo"/>
  	<result column="MEMBER_NO" property="memberNo"/>
  	<result column="REPLY_NO" property="replyNo"/>
  	<result column="REPLY_CONTENT" property="content"/>
  	<result column="REPLY_DATE" property="date"/>
  	<result column="RE_REPLY_NO" property="reReplyNo"/>
  	<result column="NICKNAME" property="nickName"/>
  </resultMap>
  
  
  <!-- 게시글 총 갯수 조회 -->
  <select id="selectListCount" resultType="_int">
  	SELECT COUNT(*) 
  	  FROM COMMUNITY
  	 WHERE BOARD_STATUS = 'Y' AND
  	 	   COMMUNITY_NO != 1 <!-- 공지 제외 -->
  </select>
  
  <!-- 카테고리 게시글의 개수 조회 -->
  <select id="selectCategoryListCount" resultType="_int">
  	 SELECT COUNT(*) 
  	   FROM COMMUNITY
  	   JOIN COMMUNITY_CATEGORY USING(COMMUNITY_NO)
	  WHERE BOARD_STATUS = 'Y' AND <!-- 게시글 상태가 'Y'이고 커뮤니티 이름이 동일한  -->
	  		COMMUNITY_NAME = #{category}
  </select>
  
  <!-- 게시글 조회 -->
  <select id="selectList" resultType="Community">
  	 SELECT BOARD_NO boardNo,
			BOARD_TITLE boardTitle,
			TO_CHAR(BOARD_DATE, 'YYYY-MM-DD') boardDate ,
			BOARD_VIEW_COUNT boardViewCount ,
			COMMUNITY_NAME communityName,
			NICKNAME userName
	   FROM COMMUNITY
       JOIN COMMUNITY_CATEGORY USING(COMMUNITY_NO)
       JOIN MEMBER USING(MEMBER_NO)
	  WHERE BOARD_STATUS = 'Y'
   ORDER BY BOARD_NO DESC
  </select>
  
  <!-- 카테고리 게시글 조회 -->
  <select id="selectCategoryList" resultType="Community">
  	 SELECT BOARD_NO boardNo,
			BOARD_TITLE boardTitle,
			TO_CHAR(BOARD_DATE, 'YYYY-MM-DD') boardDate ,
			BOARD_VIEW_COUNT boardViewCount ,
			COMMUNITY_NAME communityName,
			NICKNAME userName
	   FROM COMMUNITY
       JOIN COMMUNITY_CATEGORY USING(COMMUNITY_NO)
       JOIN MEMBER USING(MEMBER_NO)
	  WHERE BOARD_STATUS = 'Y' AND
	  		COMMUNITY_NAME = #{category}
   ORDER BY BOARD_NO DESC
  </select>
  
  <!-- 공지 게시글 조회 -->
  <select id="selectNoticeList" resultType="Community">
  	 SELECT BOARD_NO boardNo,
			BOARD_TITLE boardTitle,
			TO_CHAR(BOARD_DATE, 'YYYY-MM-DD') boardDate ,
			BOARD_VIEW_COUNT boardViewCount ,
			COMMUNITY_NAME communityName,
			NICKNAME userName
	   FROM COMMUNITY
       JOIN COMMUNITY_CATEGORY USING(COMMUNITY_NO)
       JOIN MEMBER USING(MEMBER_NO)
	  WHERE BOARD_STATUS = 'Y' AND
	  		COMMUNITY_NAME = '공지'
   ORDER BY BOARD_NO DESC
  </select>
  
  <!-- 검색 게시글  개수 -->
  <select id="selectSearchCount" resultType="_int">
  	SELECT COUNT(*)
  	  FROM COMMUNITY
  	  JOIN MEMBER 
  	  	   USING (MEMBER_NO)
  	  JOIN COMMUNITY_CATEGORY 
  	  	   USING (COMMUNITY_NO)
  	 WHERE BOARD_STATUS = 'Y'
  	 <if test="condition == 'writer'">
  		 AND NICKNAME
	 </if>
	 <if test="condition == 'title'">
	 	AND BOARD_TITLE
	 </if>
	 <!--  
	 <if test="condition == 'content'">
	 	AND BOARD_CONTENT
	 </if>
	 -->
	 LIKE '%' || #{keyword} || '%'
	 <if test="category != '전체'"> <!-- 카테고리가 '전체'일 경우 커뮤니티 where 실행안함 -->
	 	 AND COMMUNITY_NAME 
	 	LIKE '%' || #{category} || '%'
	 </if>
	</select>
	 
	<!-- 검색 게시글 목록 -->
  <select id="selectSearchList" resultType="Community">
  	 SELECT BOARD_NO boardNo,
			BOARD_TITLE boardTitle,
			TO_CHAR(BOARD_DATE, 'YYYY-MM-DD') boardDate ,
			BOARD_VIEW_COUNT boardViewCount ,
			COMMUNITY_NAME communityName,
			NICKNAME userName
	   FROM COMMUNITY
       JOIN COMMUNITY_CATEGORY USING(COMMUNITY_NO)
       JOIN MEMBER USING(MEMBER_NO)
       WHERE BOARD_STATUS = 'Y'
       	<if test="condition == 'writer'">
       		AND NICKNAME
		</if>
		<if test="condition == 'title'">
			AND BOARD_TITLE
		</if>
		<!--  
		<if test="condition == 'content'">
		 AND BOARD_CONTENT
		</if>
		-->
		 	LIKE '%' || #{keyword} || '%'
		 <if test="category != '전체'">
		 	AND COMMUNITY_NAME 
	 	 	LIKE '%' || #{category} || '%'
	 	 </if>
  		 	ORDER BY BOARD_NO DESC
  </select>
 
  	<!-- 게시글 상세 -->
  	<select id="selectBoard" resultMap="boardResultSet">
  	 SELECT BOARD_NO,
			BOARD_TITLE,
			TO_CHAR(BOARD_DATE, 'YYYY.MM.DD HH:MM') as BOARD_DATE,
			BOARD_STATUS,
			COMMUNITY_NO,
			MEMBER_NO,
			BOARD_CONTENT,
			NICKNAME
	   FROM COMMUNITY
	   JOIN MEMBER USING(MEMBER_NO)
	  WHERE BOARD_STATUS = 'Y'
	  	AND	BOARD_NO = #{boardNo}
  </select>
  
  <!-- 조회수 증가 -->
  <update id="increaseView">
  	UPDATE COMMUNITY
  	   SET BOARD_VIEW_COUNT = BOARD_VIEW_COUNT + 1
  	 WHERE BOARD_NO = #{boardNo}
  	   AND BOARD_STATUS = 'Y'
  </update>
  
  <update id="deleteboard">
  	 UPDATE COMMUNITY
  	 	SET BOARD_STATUS = 'N'
	  WHERE BOARD_NO = #{boardNo}
  </update>
  
  <!-- 신고당한 게시글의 userNo찾기 -->
  	<select id="selectReportedUserNo" resultType="_int">
  		SELECT MEMBER_NO
  		  FROM COMMUNITY
  		WHERE BOARD_NO = #{boardNo}
  	</select>
  
  <!-- 신고기능 -->
  <insert id="insertReport">
  	INSERT INTO REPORT(
		  		REPORT_NO,
				"TYPE_NO",
				DETAIL_CONTENT,
				MEMBER_NO,
				REPORTED_MEMBER_NO,
				BOARD_NO
				) 
				VALUES (
				SEQ_RNO.nextval,
				#{TypeNo},
				#{detailContent},
				#{memberNo},
				#{reportedMemberNo},
				#{boardNo}
		  	)
  </insert>
  
  <insert id="insertBoard">
  	INSERT INTO COMMUNITY(
	  				BOARD_NO,
					BOARD_TITLE,
					BOARD_CONTENT,
					COMMUNITY_NO,
					MEMBER_NO
  					)
  					VALUES(
  					SEQ_BNO.NEXTVAL,
  					#{boardTitle},
  					#{content},
  					#{communityNo},
  					#{memberNo}
  					)
  </insert>
  
  <insert id="insertBoardFile">
  	INSERT INTO TOTAL_ATTACHMENT(
  					FILE_NO,
	  				ORIGIN_NAME,
	  				CHANGE_NAME,
	  				FILE_PATH,
	  				BOARD_NO
  					)
  					VALUES(
  					SEQ_FILE_NO.nextval,
  					#{originName},
  					#{changeName},
  					#{file_path},
  					SEQ_BNO.CURRVAL
  					)
  </insert>

	<update id="updateBoard">
		UPDATE COMMUNITY
  	 	   SET BOARD_TITLE = #{boardTitle},
			   BOARD_CONTENT = #{content},
			   COMMUNITY_NO = #{communityNo}
	  	 WHERE BOARD_NO = #{boardNo}
	</update>
	
	<update id="updateBoardFile">
			 UPDATE TOTAL_ATTACHMENT
			    SET ORIGIN_NAME = #{originName},
 					CHANGE_NAME = #{changeName},
 					FILE_PATH = #{file_path}
			  WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 좋아요 유무체크 -->
	<select id="checkGood" resultType="_int">
		SELECT COUNT(*)
		  FROM GOOD
		 WHERE BOARD_NO = #{boardNo} AND
		 	   MEMBER_NO = #{memberNo}
	</select>

	<!-- 좋아요 수정 -->
	<update id="updateGood">
		<if test="isHeartOnOff == false">
			DELETE FROM GOOD
			WHERE BOARD_NO = #{boardNo} AND
				MEMBER_NO = #{memberNo}
		</if>
		<if test="isHeartOnOff == true">
			INSERT INTO GOOD(
						BOARD_NO,
						MEMBER_NO
			)VALUES(
			#{boardNo},
			#{memberNo}
			)
		</if>
	</update>
	
	<!-- 좋아요 개수 -->
	<select id="countGood" resultType="_int">
		SELECT COUNT(*)
		FROM GOOD
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	<!-- 댓글 리스트 -->
	<select id="selectReplyList" resultMap="ReplyResultSet">
		SELECT BOARD_NO, REPLY_NO, MEMBER_NO, NICKNAME, REPLY_CONTENT, TO_CHAR(REPLY_DATE, 'MM-DD HH:MM') AS REPLY_DATE
		  FROM REPLY
		  JOIN MEMBER USING (MEMBER_NO)
		 WHERE BOARD_NO = #{boardNo}
		 ORDER BY REPLY_NO DESC
	</select>
	
	<!-- 댓글 추가 -->
	<insert id="insertReply">
		INSERT INTO REPLY(
					REPLY_NO,
					BOARD_NO,
					MEMBER_NO,
					REPLY_CONTENT
					)VALUES(
					SEQ_REPLY_NO.nextval,
					#{boardNo},
					#{memberNo},
					#{replyContent})
	</insert>
	<!-- 댓글 삭제 -->
	<delete id="deleteReply">
		DELETE FROM REPLY
		WHERE REPLY_NO = #{replyNo} AND
			  BOARD_NO = #{boardNo}
	</delete>
	<update id="updateReply">
		UPDATE REPLY
		   SET REPLY_CONTENT = #{replyContent}
		 WHERE REPLY_NO = #{replyNo} AND
			   BOARD_NO = #{boardNo}
	</update>
	
	<select id="selectPopularCommunity" resultMap="boardResultSet">
	SELECT BOARD_NO,
			BOARD_TITLE,
			BOARD_CONTENT,
			BOARD_DATE,
			BOARD_VIEW_COUNT,
			BOARD_STATUS,
			COMMUNITY_NO,
			MEMBER_NO,
			CHANGE_NAME
	FROM COMMUNITY
	
	</select>
</mapper>





