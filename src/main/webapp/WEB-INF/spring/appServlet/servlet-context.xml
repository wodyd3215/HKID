<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:property-placeholder location="classpath:*.properties" file-encoding="UTF-8"/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.hkid" />
	
	<aop:aspectj-autoproxy /> 
	
	<!-- Http요청을 socket요청으로 변경해주는 작업을 한다. -->
	<websocket:handlers> <!-- Namespaces에서 websocket 체크해야함 -->
		<!-- /server라는 Http요청이 오면 chatServer가 요청을 받아서 처리해준다.(socket요청으로 변경해주는 작업) -->
		<websocket:mapping handler="chatServer" path="/server" />
		<!-- Http요청에 대해서 interceptor가 작동해서 socket요청으로 변경해준다. -->
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<!-- 
		*사용자가 어떤 url로 요청시 해당문서가 읽혀진다고 생각하면 된다.
		
		handlerMapping을 통해서 url로 요청시 어떤 Controller를 구동시킬건지 찾아내야 한다. -> 요청값에 적합한 Controller 실행
		
		1. 요청될때마다 실행될 Controller클래스들을 been으로 등록
		<beans:bean class="com.kh.spring.member.controller.MemberController" id="loginController" />
		
		2.어떤 url로 요청시 어떤 Controller를 구동시킬것인지 맵핑(handlerMapping)을 시켜줘야한다.
		<beans:bean class="org.springFramework.web.servlet.habdler.SimpleHandlerMapping">
		 	<bean:property name="mapping">
		 		<beans:prop key="login.me">loginController</beans:prop>
		 	</bean:property>
		</beans:bean>	
	 -->
	 

 	<interceptors>
 		<interceptor>
			<mapping path="/boardWrite.bo" /> <!-- 게시글작성 -->
			<mapping path="/personal.me" /> <!-- 개인설정 -->
			
			<!-- 내 다이어리 -->
			<mapping path="/myDiaryList.me" />
			<mapping path="/selectDiaryList.me" />
			<mapping path="/diaryEnroll.me" />
			<mapping path="/insertImgAjax.di" />
			<mapping path="/insertDiary.di" />
			<mapping path="/detailDiary.di" />
			<mapping path="/delete.di" />
			<mapping path="/updateDiaryForm.di" />
			<mapping path="/updateDiary.di" />
			<mapping path="/deleteImgAjax.di" />		
			<mapping path="/boardWrite.bo" />	 
			<beans:bean class="com.kh.hkid.common.interceptor.LoginInterceptor" id="loginInterceptor" />
		</interceptor>
	</interceptors>

<!-- <interceptors>
	 	<interceptor>
	 		<mapping path="적용url"/>
	 		<beans:bean class="적용인터셉터클레스" id="아이디" />
	 	</interceptor>
	 </interceptors> -->
	 
	 <tx:annotation-driven transaction-manager="txManager" />
</beans:beans>
